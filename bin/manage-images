#!/usr/bin/env python
import logging
from optparse import OptionParser

import starcluster
from starcluster import starclustercfg as cfg

log = logging.getLogger('starcluster')

def main():
    description = """
StarCluster - (http://web.mit.edu/stardev/cluster)
Author: justin.t.riley@gmail.com
Please submit bug reports to star@mit.edu 

manage-images 
    """

    print description 

    usage = "usage: %prog [options]"

    parser = OptionParser(usage)

    parser.add_option("-l","--list-images", dest="list_images", action="store_true", default=False, help="list all registered ec2 images")
    parser.add_option("-f","--show-image-files", dest="show_image", default=None, help="show all files on s3 for an ec2 image (AMI id or human readable name)")
    parser.add_option("-b","--list-buckets", dest="list_buckets", action="store_true", default=False, help="list all s3 buckets")
    parser.add_option("-s","--show-bucket-files", dest="show_bucket", default=None, help="show all files in bucket")
    parser.add_option("-r","--remove-image", dest="remove_image", default=None, help="deregister an ec2 image and remove it from s3")
    parser.add_option("-p","--pretend", dest="pretend", default=False, action="store_true", help="pretend run, don't really do anything (useful with -r option)")
    parser.add_option("-d","--debug", dest="debug", action="store_true", default=False, help="print debug messages (may be useful for diagnosing problems)")

    (options,args) = parser.parse_args() 

    if options.debug:
        log.setLevel(logging.DEBUG)

    cfg.validate_aws_or_exit()

    if options.list_images:
        starcluster.ec2utils.list_registered_images()
    elif options.list_buckets:
        starcluster.s3utils.list_buckets()
    elif options.show_bucket:
        starcluster.s3utils.show_bucket_files(options.show_bucket)
    elif options.remove_image:
        starcluster.ec2utils.remove_image(options.remove_image, pretend=options.pretend)
    elif options.show_image:
        starcluster.ec2utils.list_image_files(options.show_image)
    else:
        parser.print_help()
    
if __name__ == "__main__":
    main()
